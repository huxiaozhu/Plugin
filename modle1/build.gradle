if (isModule) {
    //集成模式
    apply plugin: 'com.android.library'
} else {
    //组件模式
    apply plugin: 'com.android.application'
}
def cfg = rootProject.ext.android
def appId = rootProject.ext.appId

android {
    compileSdkVersion cfg.compileSdkVersion
    defaultConfig {
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg["targetSdkVersion"]
        versionCode cfg.versionCode
        versionName cfg.versionName
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        //组件模式下
        if (!isModule) {
            applicationId appId["modle1"]
        }
        //在buildConfig中添加一条isModule，用来在代码中判断当前状态
        buildConfigField ("boolean","isModule",String.valueOf(isModule))

        sourceSets {
            main {
                if (!isModule) {
                    //组件模式下加载带Main函数的manifest
                    manifest.srcFile 'src/main/debug/AndroidManifest.xml'
//                    配置java源文件,lib没有applaction，我们在组件模式下可以将器放在debug
                    java.srcDirs 'src/main/debug','src/main/java'
                } else {
                    //集成模式
                    manifest.srcFile 'src/main/java/AndroidManifest.xml'
                }
            }
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
